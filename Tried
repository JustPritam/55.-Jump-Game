class Solution {
    public boolean canJump(int[] nums) {
        int max = 0;
        for (int i = 0; i < nums.length; i ++) {
            if (i > max) {
                return false;
            }
            max = Math.max(max, i + nums[i]);
        }
        return true;
    }
}

//it means there is no way to jump to current index, so in this case, we should return false early.

// Otherwise, if we could make it to the end, it means itâ€™s possible to reach the end of the array. Then we should return true.
